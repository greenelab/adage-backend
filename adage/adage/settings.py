"""
Django settings for adage project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import yaml

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Read secrets from YAML file
path = os.path.join(BASE_DIR, 'adage', 'config.yml')
with open(path) as config_file:
    config = yaml.full_load(config_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.get('secret_key', 'django_secret_key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config.get('debug', True)

ALLOWED_HOSTS = config.get('allowed_hosts', [])

# Application definition

INSTALLED_APPS = [
    'organisms.apps.OrganismsConfig',
    'genes.apps.GenesConfig',
    'analyses.apps.AnalysesConfig',
    'tribe_client.apps.TribeClientConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_filters',
    'corsheaders',
]

REST_FRAMEWORK = {
    'PAGE_SIZE': 25,
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'adage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'adage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config['db']['name'],
        'USER': config['db']['user'],
        'PASSWORD': config['db']['password'],
        'HOST': config['db']['host'],
        'PORT': config['db']['port'],
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
# Use "python manage.py collectstatic" command to populate static directory
STATIC_ROOT = config.get('static_root', os.path.join(BASE_DIR, 'static'))
STATIC_URL = '/static/'


# CORS config
# https://pypi.org/project/django-cors-headers/
CORS_ORIGIN_ALLOW_ALL = True
CORS_URLS_REGEX = r'^/api/v1/.*$'
CORS_ALLOW_METHODS = ('GET', )


# tribe_client config (optional)
if 'tribe_client' in config:
    if 'id' in config['tribe_client']:
        TRIBE_ID = config['tribe_client']['id']
    if 'secret' in config['tribe_client']:
        TRIBE_SECRET = config['tribe_client']['secret']
    if 'redirect_uri' in config['tribe_client']:
        TRIBE_REDIRECT_URI = config['tribe_client']['redirect_uri']
    if 'scope' in config['tribe_client']:
        TRIBE_SCOPE = config['tribe_client']['scope']
    if 'base_template' in config['tribe_client']:
        TRIBE_CLIENT_BASE_TEMPLATE = config['tribe_client']['base_template']
    if 'login_redirect' in config['tribe_client']:
        TRIBE_LOGIN_REDIRECT = config['tribe_client']['login_redirect']
    if 'logout_redirect' in config['tribe_client']:
        TRIBE_LOGOUT_REDIRECT = config['tribe_client']['logout_redirect']
    if 'public_geneset_folder' in config['tribe_client']:
        PUBLIC_GENESET_FOLDER = config['tribe_client']['public_geneset_folder']
